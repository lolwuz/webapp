@{
    // Title and layout.
    Page.Title = "Mijn Boeken";
    Layout = "~/_BookListLayout.cshtml";

    // Check Login. (Return to main page)
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Default.cshtml");
    }

    // Global variable(s)
    int selectClass = 0; // 0 = Nothing changed | 1 = 1 selected | 2 = 1 deselected | 3 = 1 or more selected | 4 = 1 or more deselected

    // Open database
    var userId = WebSecurity.CurrentUserId;

    var db = Database.Open("StarterSite");
    var selectQueryString = "SELECT * FROM Books WHERE Gebruiker = " + userId + " ORDER BY Titel"; // Used for creating the booklist.

    // List met geselecteerd uit lijst
    List<bool> selectList = new List<bool>();
    List<int> selectListId = new List<int>();

    foreach (var row in db.Query(selectQueryString))
    {
        selectList.Add(false);
        selectListId.Add(0);
    }

    if (Session["selectList"] == null)
    {
        Session["selectList"] = selectList;
        Session["selectListId"] = selectListId;
    }
    else
    {
        //reset deselected books
        selectList = (List<bool>)Session["selectList"];
        selectListId = (List<int>)Session["selectListId"];

        for (int i = 0; i < selectListId.Count; i++)
        {
            if (selectListId[i] > 0)
            {
                selectList[i] = true;
            }
            else
            {
                selectList[i] = false;
            }
        }
    }

    // Sorting the book list.
    string sortBy = Request.QueryString["sr"];
    string searchTermQuery = Request.QueryString["searchbar"];

    string[] columnNames = new string[] { "Titel", "Auteur", "UploadDatum", "Grootte", "Beoordeling", "Serie", "Uitgever", "UitgaveDatum", "Taal" };
    string[] displayedColumnNames = new string[] { "Titel", "Auteur", "Toegevoegd", "Grootte", "Beoordeling", "Serie", "Uitgever", "Uitgave", "Taal" };

    if (!IsPost)
    {
        // Sorting books.
        if (!Request.QueryString["sr"].IsEmpty())
        {
            int sortCount = (int)char.GetNumericValue(sortBy[0]);
            char sortDescAsc = sortBy[1];

            // Check to see if the column contains a string or not
            List<string> nvarcharColumns = new List<string>() { "Titel", "Auteur", "Uitgever", "Taal", "Path", "Beschrijving", "Tags", "Serie", "OriginalFormat" };
            if (nvarcharColumns.Contains(columnNames[sortCount]))
            {
                if (sortDescAsc == 'a')
                {
                    selectQueryString = "SELECT * FROM Books WHERE Gebruiker = " + userId + " ORDER BY " + columnNames[sortCount] + " DESC";
                }
                else
                {
                    selectQueryString = "SELECT * FROM Books WHERE Gebruiker = " + userId + " ORDER BY CASE WHEN " + columnNames[sortCount] + " = '-' THEN 'ZZZZZZZZZZZ' ELSE " + columnNames[sortCount] + " END ASC";
                }
            }
            else
            {
                if (sortDescAsc == 'a')
                {
                    selectQueryString = "SELECT * FROM Books WHERE Gebruiker = " + userId + " ORDER BY " + columnNames[sortCount] + " DESC";
                }
                else
                {
                    selectQueryString = "SELECT * FROM Books WHERE Gebruiker = " + userId + " ORDER BY " + columnNames[sortCount] + " ASC";
                }
            }
        }
        else
        {
            Response.Redirect("~/List.cshtml?sr=0b");
            //sortBy = "0b";
        }

        // Give Books a star rating. Max 5/5.
        if (!Request.QueryString["st"].IsEmpty() && Request.QueryString["st"].AsInt() >= 0)
        {

            var rating = Request.QueryString["st"]; // Contains the rating and which book got rated
            var stars = rating[rating.Length - 1]; // Number off Stars
            var rated = ""; // Which book got rated

            for (int i = 0; i < rating.Length - 1; i++)
            {
                rated += rating[i];
            }

            var statement = "UPDATE Books SET Beoordeling = @0 WHERE Id = @1";
            db.Execute(statement, (int)char.GetNumericValue(stars) + 1, rated);
        }

    }

    // Select and Deselect books
    foreach (var row in db.Query(selectQueryString))
    {
        // Selecting multiple books.
        if (!Request.QueryString["at"].IsEmpty())
        {
            string selectedBooks = Request.QueryString["at"];
            string[] selectID = selectedBooks.Split(' '); // Splitting select books from QueryString

            foreach (string id in selectID)
            {
                if (row.ID == id.AsInt())
                {
                    int index = selectListId.IndexOf(row.ID);
                    if (index == -1)
                    {
                        int emptyIndex = selectListId.IndexOf(0);
                        selectList[emptyIndex] = true;
                        selectListId[emptyIndex] = id.AsInt();
                        selectClass = 3;
                    }
                    else
                    {
                        selectList[index] = false;
                        selectListId[index] = 0;
                        selectClass = 4;
                    }
                }
            }
        }

        // Selecting a single book from the List.
        if (!Request.QueryString["id"].IsEmpty() && Request.QueryString["id"].AsInt() > 0)
        {
            var bookId = Request.QueryString["id"];

            if (row.ID == bookId.AsInt())
            {

                int index = selectListId.IndexOf(row.ID);
                if (index == -1)
                {
                    int emptyIndex = selectListId.IndexOf(0);
                    selectList[emptyIndex] = true;
                    selectListId[emptyIndex] = bookId.AsInt();
                    selectClass = 1;
                }
                else
                {
                    selectList[index] = false;
                    selectListId[index] = 0;
                    selectClass = 2;
                }
            }
        }
    }
}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-2">
            <ul class="sortcard list-unstyled">
                @{
                    for (int i = 0; i < columnNames.Length; i++)
                    {
                        string currCol = columnNames[i];
                        var countStatement = "SELECT " + currCol + " FROM Books WHERE Gebruiker = " + userId + " GROUP BY " + currCol;
                        var countQueryVal = db.Query(countStatement);
                        var amount = countQueryVal.Count();
                        string newSortOrder = "b";
                        string searchTerm = Request["sb"];

                        if (sortBy.Length > 2 || i == 0)
                        {
                            if (sortBy[1] == 'b' && currCol == columnNames[sortBy[0] - 48])
                            {
                                newSortOrder = "a";
                            }
                            else
                            {
                                newSortOrder = "b";
                            }
                        }
                        if (currCol == "Beoordeling" && columnNames[sortBy[0] - 48] != "Beoordeling")
                        {
                            newSortOrder = "a";
                        }

                        // Set the url value for the link
                        string sortBySwitch = i + newSortOrder + 1;

                        if (!(searchTerm.IsEmpty() || searchTerm == null))
                        {
                            sortBySwitch += "&sb=" + searchTerm;
                        }

                        // Set the indicator when selected.
                        string indicator = "32";
                        int sortCount = (int)char.GetNumericValue(sortBy[0]);
                        if (sortCount == i)
                        {
                            if (sortBy[1] == 'a')
                            {
                                indicator = "9660";
                            }
                            else
                            {
                                indicator = "9650";
                            }
                        }

                        <li>
                            <a class="sortTitle" href="~/List.cshtml?sr=@sortBySwitch">&#@indicator; @displayedColumnNames[i]</a> <span class="badge" style="float: right;">@amount</span>
                            @{
                                if (sortCount == i && i != 0)
                                {
                                    // Make a list from all unique columnNames[i]. Example all unique authors are listed.
                                    var sortQuery = "SELECT " + columnNames[i] + " FROM Books WHERE Gebruiker = " + userId + " GROUP BY " + columnNames[i];
                                    <hr style="margin: 8px 0px 8px 0px;" />
                                    <div class="listPanel" id="listPanelShort">
                                        <ul class="sortList">
                                            @{
                                                int count = 0;
                                                foreach (var row in db.Query(sortQuery))
                                                {
                                                    // Select all ID's from the books with the (for example) author names.
                                                    var sortFindQuery = "SELECT Id FROM Books WHERE " + columnNames[i] + " = @0";
                                                    string selectBooks = "";

                                                    // Make a string for passing the selected books.
                                                    foreach (var id in db.Query(sortFindQuery, row[0]))
                                                    {
                                                        selectBooks += id[0];
                                                        selectBooks += "+";
                                                    }

                                                    // Remove the "+" at the end of the string.
                                                    string selectedBooks = "";
                                                    if (selectBooks[selectBooks.Length - 1] == '+')
                                                    {
                                                        for (int ii = 0; ii < selectBooks.Length - 1; ii++)
                                                        {
                                                            selectedBooks += selectBooks[ii];
                                                        }
                                                    }
                                                    else
                                                    {
                                                        // Only 1 book is selected.
                                                        selectedBooks = selectBooks;
                                                    }

                                                    // Links for the first 10 books
                                                    if (count <= 9)
                                                    {
                                                        <li><a href="~/List.cshtml?sr=@sortBy&at=@selectedBooks">@row[0]</a></li>
                                                    }
                                                    // showMore link when there are more than 10 books
                                                    if (count == 10)
                                                    {
                                                        <li><a class="toggleListPanel" href="#listPanelLong">[Laat alles zien]</a></li>
                                                        break;
                                                    }
                                                    count++;
                                                }
                                            }
                                        </ul>
                                    </div>
                                                if (selectList.Count > 10)
                                                {
                                        <div class="listPanel" id="listPanelLong">
                                            <ul class="sortList">
                                                @{
                                                    var countAll = 0;
                                                    foreach (var row in db.Query(sortQuery))
                                                    {
                                                        // Select all ID's from the books with the (for example) author names.
                                                        var sortFindQuery = "SELECT Id FROM Books WHERE " + columnNames[i] + " = @0";
                                                        string selectBooks = "";

                                                        // Make a string for passing the selected books.
                                                        foreach (var id in db.Query(sortFindQuery, row[0]))
                                                        {
                                                            selectBooks += id[0];
                                                            selectBooks += "+";
                                                        }

                                                        // Remove the "+" at the end of the string.
                                                        string selectedBooks = "";
                                                        if (selectBooks[selectBooks.Length - 1] == '+')
                                                        {
                                                            for (int ii = 0; ii < selectBooks.Length - 1; ii++)
                                                            {
                                                                selectedBooks += selectBooks[ii];
                                                            }
                                                        }
                                                        else
                                                        {
                                                            // Only 1 book is selected.
                                                            selectedBooks = selectBooks;
                                                        }

                                                        // Complete list of all items. These will be visible when the "showMore" link is clicked
                                                        <li><a href="~/List.cshtml?sr=@sortBy&at=@selectedBooks">@row[0]</a></li>

                                                        countAll++;
                                                        if (countAll == amount)
                                                        {
                                                            <li><a class="toggleListPanel" href="#listPanelShort">[Laat minder zien]</a></li>
                                                        }
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    }
                                }
                            }

                            @if (currCol != "Taal")
                            {
                                <hr class="sortdivider" />
                            }
                        </li>
                    }
                }
            </ul>
        </div>
        <!-- Search section -->
        <div class="col-sm-7">
            <form class="searchform" method="get">
                @Html.ValidationSummary()
                <div class="group">
                    <input type="hidden" name="sr" value="@Request["sr"]" />
                    <input class="inputmaterial" type="search" placeholder="Druk op enter om te zoeken..." name="sb" value="@Request["sb"]" />
                    <span class="bar"></span>
                </div>
            </form>

            <br />

            @if (!Request.QueryString["sb"].IsEmpty())
            {
                // Search Querys.
                var searchTitel = "SELECT * FROM Books WHERE Titel LIKE @0";
                var searchAuthor = "SELECT * FROM Books WHERE Auteur LIKE @0";
                var searchSerie = "SELECT * FROM Books WHERE Serie LIKE @0";
                var searchUitgever = "SELECT * FROM Books WHERE Uitgever LIKE @0";
                var searchTags = "SELECT * FROM Books WHERE Tags LIKE @0";

                // User input
                var searchTerm = "%" + Request["sb"] + "%";

                // Result of search querys
                var resultTitel = db.Query(searchTitel, searchTerm);
                var resultAuthor = db.Query(searchAuthor, searchTerm);
                var resultSerie = db.Query(searchSerie, searchTerm);
                var resultUitgever = db.Query(searchUitgever, searchTerm);
                var resultTags = db.Query(searchTags, searchTerm);

                if (resultTitel.Count() > 0 || resultAuthor.Count() > 0 || resultSerie.Count() > 0 || resultUitgever.Count() > 0 || resultTags.Count() > 0)
                {
                    <!-- 4 tabs; titels , authors, series and publishers -->
                    <ul class="nav nav-tabs">
                        <li class="active"><a data-toggle="tab" href="#home">Titels <span class="label label-default default-primary-color">@resultTitel.Count()</span></a></li>
                        <li><a data-toggle="tab" href="#menu1">Auteurs <span class="label label-default default-primary-color">@resultAuthor.Count()</span></a></li>
                        <li><a data-toggle="tab" href="#menu2">Series <span class="label label-default default-primary-color">@resultSerie.Count()</span></a></li>
                        <li><a data-toggle="tab" href="#menu3">Uitgevers <span class="label label-default default-primary-color">@resultUitgever.Count()</span></a></li>
                        <li><a data-toggle="tab" href="#menu4">Tags <span class="label label-default default-primary-color">@resultTags.Count()</span></a></li>
                    </ul>

                    <!-- Tab content -->
                    <div class="tab-content">
                        <div id="home" class="tab-pane active">
                            @Helpers.searchList(resultTitel, selectListId, sortBy)
                        </div>
                        <div id="menu1" class="tab-pane ">
                            @Helpers.searchList(resultAuthor, selectListId, sortBy)
                        </div>
                        <div id="menu2" class="tab-pane">
                            @Helpers.searchList(resultSerie, selectListId, sortBy)
                        </div>
                        <div id="menu3" class="tab-pane">
                            @Helpers.searchList(resultUitgever, selectListId, sortBy)
                        </div>
                        <div id="menu4" class="tab-pane">
                            @Helpers.searchList(resultTags, selectListId, sortBy)
                        </div>
                    </div>
                }
                else
                {
                    <h4>Helaas, niks gevonden.</h4>
                }
            }
            <hr style="margin-top: 10px; margin-bottom: 10px;" />

            <!-- Create card with the book list inside -->
            <div class="listcard">
                <table class="table table-responsive">
                    <thead>
                        <tr>
                            @{ 
                                // Create a column for each columnName.
                                List<string> listColNames = new List<string> { "Titel", "Auteur", "Toegevoegd", "Grootte", "Beoordeling", "Tags", "Serie", "Uitgever", "Uitgave" };

                                for (int i = 0; i < listColNames.Count; i++)
                                {
                                    string currCol = listColNames[i];
                                    string indicator = "32";

                                    // Sorting
                                    if (currCol == displayedColumnNames[sortBy[0] - 48])
                                    {
                                        if (sortBy[1] == 'a')
                                        {
                                            indicator = "9660";
                                        }
                                        else
                                        {
                                            indicator = "9650";
                                        }
                                        <th>&#@indicator; @currCol</th>
                                    }
                                    else
                                    {
                                        <th>@currCol</th>
                                    }
                                }
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            // Create a row in the table for each book.
                            foreach (var row in db.Query(selectQueryString))
                            {
                                string onClickValue = "document.location.href='/List.cshtml?sr=" + sortBy + "&sb=" + Request["sb"] + "&id=" + row.ID + /*"#" + row.ID +*/ "';";
                                if (selectListId.IndexOf(Convert.ToInt32(row.ID)) != -1)
                                {
                                    // Table is selected: change row color.
                                    <tr class="selectedTable">
                                        <td onClick=@onClickValue>@row.Titel</td>
                                        <td onClick=@onClickValue>@row.Auteur</td>
                                        <td onClick=@onClickValue>@row.UploadDatum.ToString("dd-MMM-yy")</td>
                                        <td onClick=@onClickValue>@row.Grootte MB</td>
                                        <td>
                                            @for (int i = 0; i < 5; i++)
                                            {
                                                // Create 5 stars.
                                                string rating = Convert.ToString(row.ID) + Convert.ToString(i);
                                                if (i < row.Beoordeling)
                                                {
                                                    // Full stars.
                                                    <a href="~/List.cshtml?sr=@sortBy&st=@rating"><img src='~/Images/star.png' width="10" alt='*' /></a>
                                                }
                                                else
                                                {
                                                    // Empty stars.
                                                    <a href="~/List.cshtml?sr=@sortBy&st=@rating"><img src='~/Images/starempty.png' width="10" alt='' /></a>
                                                }
                                            }
                                        </td>
                                        <td onClick=@onClickValue>@row.Tags</td>
                                        <td onClick=@onClickValue>@row.Serie</td>
                                        <td onClick=@onClickValue>@row.Uitgever</td>
                                        <td onClick=@onClickValue>@row.UitgaveDatum</td>
                                    </tr>

                                }
                                else
                                {
                                    // Table is not selected.
                                    <tr class="deselectedtable" name="row.ID">
                                        <td onClick=@onClickValue>@*<a name="@row.ID"></a>*@@row.Titel</td>
                                        <td onClick=@onClickValue>@row.Auteur</td>
                                        <td onClick=@onClickValue>@row.UploadDatum.ToString("dd-MMM-yy")</td>
                                        <td onClick=@onClickValue>@row.Grootte MB</td>
                                        <td>
                                            @for (int i = 0; i < 5; i++)
                                            {
                                                // Create stars. 
                                                string rating = Convert.ToString(row.ID) + Convert.ToString(i);
                                                if (i < row.Beoordeling)
                                                {
                                                    // Full stars.
                                                    <a href="~/List.cshtml?sr=@sortBy&st=@rating"><img src='~/Images/star.png' width="10" alt='*' /></a>
                                                }
                                                else
                                                {
                                                    // Empty stars
                                                    <a href="~/List.cshtml?sr=@sortBy&st=@rating"><img src='~/Images/starempty.png' width="10" alt='' /></a>
                                                }
                                            }
                                        </td>
                                        <td onClick=@onClickValue>@row.Tags</td>
                                        <td onClick=@onClickValue>@row.Serie</td>
                                        <td onClick=@onClickValue>@row.Uitgever</td>
                                        <td onClick=@onClickValue>@row.UitgaveDatum</td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-sm-3">
            @{
                int selectedbooks = 0;
                foreach (int i in selectListId)
                {
                    if (i != 0)
                    {
                        selectedbooks++;
                    }
                }

                if (selectedbooks > 0)
                {
                    <h4 id="selectedbooks">Aantal boeken geselecteerd: @selectedbooks</h4>
                    <h6>
                        <a class="btn btn-default btn-sm" href="~/Books/BooksDownload.cshtml">Download</a>
                        <a class="btn btn-default btn-sm" href="~/Books/BooksEmail.cshtml">E-mail</a>
                        <a class="btn btn-default btn-sm" href="~/Books/BooksUpdate.cshtml">Metadata</a>
                        <a class="btn btn-danger accent-color btn-sm" href="~/Books/BooksDelete.cshtml">Verwijderen</a>
                    </h6>
                    <hr />
                }
                else
                {
                    <h4 id="selectedbooks">Welkom terug op E-Book Online!</h4>
                    <p><b>Tip:</b> Selecteer één of meerdere boeken uit uw bibliotheek voor meer Info.</p>
                }
            }

            <!-- Create a card for each selected book in the list. -->
            @Helpers.createCards(db, selectListId, selectClass)
            @{ 
                // If an item has been deleted, fix the list (F.I.: {T, T, F, T, F, T, F, F, F} -> {T, T, T, T, F, F, F, F, F}
                if (selectClass == 2 || selectClass == 4)
                {
                    bool continueLoop = true;
                    for (int i = 0; i < selectList.Count; i++)
                    {
                        if (continueLoop == false)
                        {
                            break;
                        }
                        if (selectList[i] == false)
                        {
                            // Swap the empty slot with the next one and do this for every remaining element in the list.
                            for (int x = i+1; x < selectList.Count; x++)
                            {
                                selectList[x - 1] = selectList[x];
                                selectList[x] = false;
                                selectListId[x - 1] = selectListId[x];
                                selectListId[x] = 0;
                            }
                            // Check if there is another empty slot in between non-empty slots.
                            bool falseFound = false;
                            for (int y = i; y <= selectList.Count; y++)
                            {
                                if (y == selectList.Count)
                                {
                                    continueLoop = false;
                                    break;
                                }
                                if (selectList[y] == false)
                                {
                                    falseFound = true;

                                }
                                else if (falseFound == true && selectList[y] == true)
                                {
                                    i -= 1;
                                    break;
                                }
                            }
                        }
                    }
                }
            }
        </div>
    </div>
</div>

<!-- This script will hide all list items (from the unique items list in the sorting list) -->
<script type="text/javascript">
    $(".listPanel").hide();
    $("#listPanelShort").show();
</script>
<!-- This script will make the long list visible when the "ShowMore" link is clicked. -->
<script type="text/javascript">
    $(document).ready(function() {
        $(".toggleListPanel").click(function (e) {
            e.preventDefault();
            $(".listPanel").hide();
            $($(this).attr("href")).show();
        });
    });
</script>