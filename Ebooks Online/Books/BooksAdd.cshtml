@using Microsoft.Web.Helpers;
@using System.Globalization;
@using System.Text.RegularExpressions;
@using iTextSharp;
@using iTextSharp.text;
@using iTextSharp.text.pdf;
@{
    Layout = "~/_BookListLayout.cshtml";
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/default.cshtml");
    }
    var fileName = "";
    var uitgever = "-";
    var uitgavedtm = "-";
    var taal = "-";
    var beschrijving = "-";
    var boekserie = "-";
    var type = "";
    var grootte = 0;
    var genre = "-";
    HttpPostedFileBase uploadedFile = null;
    Dictionary<String, String> metadata = new Dictionary<String, String>();

    if (IsPost)
    {
        if (Request["fileupload"] == null)
        {
            uploadedFile = Request.Files[0];
            Random rnd = new Random();
            grootte = (uploadedFile.ContentLength / 1024) / 1024;
            type = uploadedFile.FileName.Split('.')[1];
            fileName = Path.GetFileName(uploadedFile.FileName);
            var fileSavePath = Server.MapPath("~/Books/Files/temp/" + rnd.Next(1, 9999) +
               fileName);
            uploadedFile.SaveAs(fileSavePath);
            var bestandstype = fileSavePath.Split('.')[1];
            string convertTypeA = "";
            string convertTypeB = "";
            if (bestandstype == "pdf")
            {
                convertTypeA = "epub";
                convertTypeB = "mobi";
            }
            if (bestandstype == "epub")
            {
                convertTypeA = "pdf";
                convertTypeB = "mobi";

            }
            if (bestandstype == "mobi")
            {
                convertTypeA = "pdf";
                convertTypeB = "epub";
            }

            var fileSavePathConvertA = fileSavePath.Split('.')[0] + "." + convertTypeA;

            System.Diagnostics.Process processA = new System.Diagnostics.Process();
            System.Diagnostics.ProcessStartInfo startInfoA = new System.Diagnostics.ProcessStartInfo();
            startInfoA.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
            startInfoA.FileName = Server.MapPath("~/Books/Calibre Portable/Calibre/") + "ebook-convert.exe";
            startInfoA.Arguments = "\"" + fileSavePath + "\" \"" + fileSavePathConvertA + "\"";
            processA.StartInfo = startInfoA;
            processA.Start();


            var fileSavePathConvertB = fileSavePath.Split('.')[0] + "." + convertTypeB;
            System.Diagnostics.Process processB = new System.Diagnostics.Process();
            System.Diagnostics.ProcessStartInfo startInfoB = new System.Diagnostics.ProcessStartInfo();
            startInfoB.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;
            startInfoB.FileName = Server.MapPath("~/Books/Calibre Portable/Calibre/") + "ebook-convert.exe";
            startInfoB.Arguments = "\"" + fileSavePath + "\" \"" + fileSavePathConvertB + "\"";
            processB.StartInfo = startInfoB;
            processB.Start();

            uploadedFile.SaveAs(fileSavePathConvertA);
            uploadedFile.SaveAs(fileSavePathConvertB);

            int optellen = 0;
            while (!File.Exists(fileSavePathConvertA))
            {
                optellen++;
            }

            if (bestandstype == "pdf")
            {
                PdfReader bestand = new PdfReader(fileSavePath);
                metadata["Title"] = (bestand.Info.ContainsKey("Title")) ? bestand.Info["Title"] : "-";
                metadata["Subject"] = (bestand.Info.ContainsKey("Subject")) ? bestand.Info["Subject"] : "-";
                metadata["Author"] = (bestand.Info.ContainsKey("Author")) ? bestand.Info["Author"] : "-";
                metadata["Keywords"] = (bestand.Info.ContainsKey("Keywords")) ? bestand.Info["Keywords"] : "-";
            }
            else
            {
                metadata["Title"] = "-";
                metadata["Subject"] = "-";
                metadata["Author"] = "-";
                metadata["Keywords"] = "-";
            }
        }
        else
        {
            var data_grootte = Request["grootte"];
            var data_type = Request["type"];
            var data_filename = Request["filename"];
            var data_titel = Request["titel"];
            var data_onderwerp = Request["onderwerp"];
            var data_auteur = Request["auteur"];
            var data_uitgever = Request["uitgever"];
            string data_uitgavedtm = Request["uitgavedtm"];
            var data_taal = Request["taal"];
            var data_genre = Request["genre"];
            var data_beschrijving = Request["beschrijving"];
            var data_boekserie = Request["boekserie"];
            var data_tags = Request["tags"];
            int currentuser = WebSecurity.CurrentUserId;
            var dirindex = "*" + data_filename;
            string[] dirs = Directory.GetFiles(Server.MapPath("~/Books/Files/temp/"), dirindex);
            data_filename = data_filename.Split(new[] { "." + data_type }, StringSplitOptions.None)[0];
            var db = Database.Open("StarterSite");
            var LastBookID = db.Query("INSERT INTO Books (Gebruiker,Titel,Auteur,Uitgever,UitgaveDatum,Taal,UploadDatum,Path,Beschrijving,Tags,Serie,Beoordeling,Grootte,OriginalFormat,Genre)" +
        "VALUES(@0,@1,@2,@3,@4,@5,@6,@7,@8,@9,@10,@11,@12,@13,@14)",
        currentuser, data_titel, data_auteur, data_uitgever, data_uitgavedtm, data_taal, DateTime.Now, data_filename, data_beschrijving, data_tags, data_boekserie, 0, data_grootte, data_type, data_genre);


            long lastId = (long)db.GetLastInsertId();
            db.Query("UPDATE Books SET Path=@0 WHERE Id=@1", lastId + data_filename, lastId);

            File.Copy(dirs[0], Server.MapPath("~/Books/Files/" + data_type.ToUpper() + "/" + lastId + data_filename + "." + data_type));
            string dirIndexA = "";
            string dirIndexB = "";
            string indexA = "";
            string indexB = "";
            if (data_type == "pdf") { dirIndexA = data_filename + ".epub"; indexA = "epub"; dirIndexB = data_filename + ".mobi"; indexB = "mobi"; }
            if (data_type == "epub") { dirIndexA = data_filename + ".pdf"; indexA = "pdf"; dirIndexB = data_filename + ".mobi"; indexB = "mobi"; }
            if (data_type == "mobi") { dirIndexA = data_filename + ".pdf"; indexA = "pdf"; dirIndexB = data_filename + ".epub"; indexB = "epub"; }
            var dirIndexAA = "*" + dirIndexA;
            var dirIndexBB = "*" + dirIndexB;
            string[] dirsA = Directory.GetFiles(Server.MapPath("~/Books/Files/temp/"), dirIndexAA);
            string[] dirsB = Directory.GetFiles(Server.MapPath("~/Books/Files/temp/"), dirIndexBB);
            var test = Server.MapPath("~/Books/Files/" + indexA.ToUpper() + "/" + lastId + dirIndexA);
            File.Copy(dirsA[0], Server.MapPath("~/Books/Files/" + indexA.ToUpper() + "/" + lastId + dirIndexA));
            File.Copy(dirsB[0], Server.MapPath("~/Books/Files/" + indexB.ToUpper() + "/" + lastId + dirIndexB));


            int count = 0;
            while (count != 100000)
            {
                count++;
            }
            var path = Server.MapPath("~/Books/Files/temp/") + "clearfolder.bat";
            System.Diagnostics.Process.Start(@"C:\Users\DionVelberg\Documents\GitHub\webapp\Ebooks Online\Books\Files\temp\clearfolder.bat");

            //PdfWriter writer = PdfWriter.GetInstance(data_filename, new FileStream(final_Path, FileMode.Create));


        }


    }
}
<script>
    $(document).ready(function () {
        $("input[name=files]").on("change", function () {
            $("input[name=files]").parent().parent().parent().submit();
        });
        $(".file-upload-buttons").hide();
    });
</script>
<h1>Boek toevoegen.</h1>
<b>Bestand : </b><i>@fileName</i>
@FileUpload.GetHtml(
        name: "files",
        initialNumberOfFiles: 1,
        allowMoreFilesToBeAdded: false,
        includeFormTag: true,
        uploadText: "Upload")
@if (IsPost)
{
    if (Request.Form["fileupload"] == null)
    {
        <form method="post">
            <input id="upload" type="submit" name="fileupload" value="Upload" /><br />
            <input type="hidden" value=@grootte name="grootte" />
            <input type="hidden" value=@type name="type" />
            <input type="hidden" value=@fileName name="filename" />
            <table>
                <tr><th>Titel&nbsp;&nbsp;</th><th>Onderwerp&nbsp;&nbsp;</th><th>Auteur&nbsp;&nbsp;</th><th>Uitgever&nbsp;&nbsp;</th><th>Uitgavedatum&nbsp;&nbsp;</th><th>Taal&nbsp;&nbsp;</th><th>Genre</th><th>Beschrijving&nbsp;&nbsp;</th><th>Boekserie&nbsp;&nbsp;</th><th>Tags</th></tr>
                <tr>
                    <td><input type="text" name="titel" value="@metadata["Title"]" /></td>
                    <td><input type="text" name="onderwerp" value="@metadata["Subject"]" /></td>
                    <td><input type="text" name="auteur" value="@metadata["Author"]" /></td>
                    <td><input type="text" name="uitgever" value=@uitgever /></td>
                    <td><input type="text" name="uitgavedtm" value=@uitgavedtm /></td>
                    <td><input type="text" name="taal" value=@taal /></td>
                    <td><input type="text" name="genre" value=@genre /></td>
                    <td><input type="text" name="beschrijving" value=@beschrijving /></td>
                    <td><input type="text" name="boekserie" value=@boekserie /></td>
                    <td><input type="text" name="tags" value="@metadata["Keywords"]" /></td>
                </tr>
            </table>
        </form>
    }
}