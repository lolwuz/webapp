@functions{
    // Function for getting the shared users back in a list. 
    List<string> getSharedList(string sharedUsers) {
        List<string> list = new List<string>();
        string user = ""; // User to be added to the list.
        if (!sharedUsers.IsEmpty())
        {
            for (int i = 0; i < sharedUsers.Length; i++)
            {
                if (sharedUsers[i] != ',')
                {
                    user += sharedUsers[i];
                }
                else
                {
                    // Add user en start next user string.
                    list.Add(user);
                    user = "";
                }
            }
        }
        return list; // Return list with results 
    }
}

@{
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Default.cshtml");
    }

    Layout = "~/_BookListLayout.cshtml";
    Page.Title = "Bookshare";

    // Opening database and getting currentUserID
    Database db = Database.Open("StarterSite");
    int userID = WebSecurity.CurrentUserId;

    string query = "SELECT sharedUsers FROM UserProfile WHERE UserId = @0";
    string sharedUsers = Convert.ToString(db.QueryValue(query, userID));

    // List off shared users.
    List<string> userList = getSharedList(sharedUsers);

    if (IsPost && !Request["emailfield"].IsEmpty())
    {
        // Validation
        Validation.RequireField("email", "U moet een geldig E-Mail adress invullen");

        // Getting the email field.
        string Email = Request["emailfield"];

        // GET sharedUsers and ADD currentUserID
        query = "SELECT sharedUsers FROM UserProfile WHERE Email = @0";
        sharedUsers = Convert.ToString(db.QueryValue(query, Email));

        // Check if user ID is already in sharedDatabase
        if (getSharedList(sharedUsers).IndexOf(Convert.ToString(userID)) == -1)
        {
            // Update database with sharedusers 
            sharedUsers += userID + ","; // "," for dividing user ID's
            string updateQuery = "UPDATE UserProfile SET sharedUsers = @0 WHERE Email = @1";
            db.Execute(updateQuery, sharedUsers, Email);
        }
    }
}


<div class="container">
    <h2>Boekenlijst delen</h2>
    <p>Hier kunt u de boekenlijst delen met andere gebruikers van E-Books Online.</p>
    
    <form method="post">
        <div class="input-group">
            <span class="input-group-addon">E-Mail</span>
            <input name="emailfield" type="email" class="form-control" placeholder="voorbeeld@provider.nl">
            @Html.ValidationMessage("email")
        </div>
        <br />
        <button type="submit" class="btn btn-danger default-primary-color" name="actionButton">Delen!</button>
    </form>
    
    <hr />
</div>

<div class="container">
    <div class="searchcard">
        <!-- One Tab for each shared user.-->
        <ul class="nav nav-tabs">
            @for (int i = 0; i < userList.Count; i++)
            {
                if (i == 0)
                {
                    <li class="active"><a data-toggle="tab" href="#home">@userList[i].AsInt()</a></li>
                }
                else
                {
                    <li><a data-toggle="tab" href="#menu@i">@userList[i].AsInt()</a></li>
                }
            }
        </ul>

        <div class="tab-content">
            @for (int i = 0; i < userList.Count; i++)
            {
                if (i == 0)
                {
                    <div id="home" class="tab-pane active">
                        @Helpers.shareList(db, userList[i].AsInt())
                    </div>
                }
                else
                {
                    <div id="menu@i" class="tab-pane">
                        @Helpers.shareList(db, userList[i].AsInt())
                    </div>
                }
            }            
        </div>
    </div>
</div>