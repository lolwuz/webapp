@* Remove this section if you are using bundling *@

@{
    Layout = "~/_BookListLayout.cshtml";
    Page.Title = "Ebooks mailen";

    bool passwordSent = false;
    var email = Request.Form["email"] ?? Request.QueryString["email"];

    // Setup validation
    Validation.RequireField("email", "U moet uw email adres invullen.");

    List<int> selectedId = Session["selectListId"] as List<int>;

    <div class="container">
        <div class="col-sm-6 col-sm-offset-3">
            <div class="logincard">
                @if (selectedId == null)
                {
                    <h4>U heeft geen boeken geselecteerd. Dit kunt u op de hoofdpagina doen.</h4>
                }
                else
                {
                    List<string> attachfile = new List<string>();

                    var db = Database.Open("StarterSite");

                    <h4>De volgende boeken zijn geselecteerd</h4>

                    <ul class="list-group">
                        @{
                            for (int i = 0; i < selectedId.Count; i++)
                            {
                                if (selectedId[i] != 0)
                                {
                                    string Boek = db.QueryValue("SELECT Titel FROM Books Where Id = " + selectedId[i]);
                                    <li class="list-group-item">- @Boek</li>
                                }
                            }
                        }
                    </ul>
                                if (Request["PDF"] == "on")
                                {
                                    for (int i = 0; i < selectedId.Count; i++)
                                    {
                                        string AttachedFile = "Books/Files/PDF/" + db.QueryValue("SELECT Path FROM Books Where Id = " + selectedId[i]) + ".pdf";
                                        if (!((db.QueryValue("SELECT Path FROM Books Where Id = " + selectedId[i])) == null))
                                        {
                                            attachfile.Add(AttachedFile);
                                        }
                                    }
                                }

                                if (Request["EPUB"] == "on")
                                {
                                    for (int i = 0; i < selectedId.Count; i++)
                                    {
                                        string AttachedFile = "Books/Files/EPUB/" + db.QueryValue("SELECT Path FROM Books Where Id = " + selectedId[i]) + ".epub";
                                        if (!((db.QueryValue("SELECT Path FROM Books Where Id = " + selectedId[i])) == null))
                                        {
                                            attachfile.Add(AttachedFile);
                                        }
                                    }
                                }

                                if (Request["MOBI"] == "on")
                                {
                                    for (int i = 0; i < selectedId.Count; i++)
                                    {
                                        string AttachedFile = "Books/Files/MOBI/" + db.QueryValue("SELECT Path FROM Books Where Id = " + selectedId[i]) + ".mobi";
                                        if (!((db.QueryValue("SELECT Path FROM Books Where Id = " + selectedId[i])) == null))
                                        {
                                            attachfile.Add(AttachedFile);
                                        }
                                    }
                                }

                                if (IsPost)
                                {
                                    AntiForgery.Validate();
                                    // validate email
                                    bool isValid = true;
                                    if (isValid)
                                    {
                                        var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                                        List<string> a = new List<string>();
                                        long grootte = 0;
                                        foreach (var file in attachfile)
                                        {
                                            string fileGoed = "Files/" + file.Split('/')[2] + "/" + file.Split('/')[3];

                                            FileInfo f = new FileInfo(Server.MapPath(fileGoed));
                                            if ((grootte + f.Length) < 24000000)
                                            {
                                                grootte = grootte + f.Length;
                                                a.Add(file);
                                            }
                                            else
                                            {
                                                WebMail.Send(
                                                to: email,
                                                subject: "EBooks",
                                                body: "Hierbij ontvangt u uw gemailde EBooks",
                                                filesToAttach: a);
                                                a.Clear();
                                                a.Add(file);
                                                grootte = f.Length;
                                            }
                                        }

                                        WebMail.Send(
                                                to: email,
                                                subject: "EBooks",
                                                body: "Hierbij ontvangt u uw gemailde EBooks",
                                                filesToAttach: a);

                                        passwordSent = true;
                                    }
                                }
                            }
            </div>
        </div>
    </div>
}



@if (!WebMail.SmtpServer.IsEmpty())
{
    if (passwordSent)
    {
        <p class="message-success">
            <font size="25" color="red">De Ebooks zijn verzonden</font>
        </p>
    }
    <div class="container">
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="logincard">
                    <form method="post">
                        @AntiForgery.GetHtml()
                        @Html.ValidationSummary(excludeFieldErrors: true)

                        <fieldset>
                            <h3>Ebooks Mailen</h3>

                            <h4>Selecteer bestandsformaten</h4>

                            <hr />

                            <div class="btn-group" data-toggle="buttons">
                                <label class="btn btn-primary active">
                                    <input type="checkbox" autocomplete="off" name="PDF"> PDF
                                </label>
                                <label class="btn btn-primary active">
                                    <input type="checkbox" autocomplete="off" name="EPUB"> EPUB
                                </label>
                                <label class="btn btn-primary active">
                                    <input type="checkbox" autocomplete="off" name="MOBI"> MOBI
                                </label>
                            </div>

                            <br />
                            <br />

                            <h4>Vul uw email adres in</h4>

                            <hr />

                            <label for="email" @if (!ModelState.IsValidField("email")) { <text> class="error-label" </text>   }></label>
                            <div class="input-group">
                                <span class="input-group-addon" id="sizing-addion1">&#64;</span>
                                <input type="text" class="form-control" id="email" name="email" value="@email" disabled="@passwordSent" @Validation.For("email") />
                            </div>

                            @Html.ValidationMessage("email")
                            <br />
                            <p class="form-actions">
                                <input type="submit" class="btn btn-default default-primary-color" value="Send instructions" disabled="@passwordSent" />
                            </p>
                        </fieldset>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <p>Mail server error.</p>
}