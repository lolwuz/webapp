@using System.IO;
@using System.IO.Compression;
@using Ionic.Zip;

@{
    if (!WebSecurity.IsAuthenticated)
    {
        Response.Redirect("~/Default.cshtml");
    }

    Page.Title = "Boek downloaden";
    Layout = "~/_BookListLayout.cshtml";

    string path = "";
    var id = "";

    //if there is nothing selected, go back to list
    if (Session["selectListId"] == null)
    {
        Response.Redirect("~/List.cshtml");
    }
    List<int> selectedId = Session["selectListId"] as List<int>;
    var db = Database.Open("StarterSite");
    int length = selectedId.Count;

    //different arrays for different files
    string[] downloadpdf = new string[length];
    string[] downloadepub = new string[length];
    string[] downloadmobi = new string[length];

    length = 0;

    for (int i = 0; i < selectedId.Count; i++)
    {   //if the selectedid is not empty, add it to the length to make a array of the right length
        if (selectedId[i] != 0)
        {
            length += 1;
        }
    }

    string[] goodpdf = new string[length];
    string[] goodepub = new string[length];
    string[] goodmobi = new string[length];

    //for each selectedid[i], search for the filename and add the path in right download array
    if (IsPost)
    {
        if ((Request["pdf"] == "off") && (Request["epub"] == "off") && (Request["mobi"] == "off"))
        {
              Validation.AddFormError("Gelieve minimaal 1 checkbox aanvinken.");
        }
        else
        {
            for (int i = 0; i < length; i++)
            {
                if (selectedId[i] != 0)
                {
                    string filepdf = "";
                    string fileepub = "";
                    string filemobi = "";

                    string filepathpdf = "";
                    string filepathepub = "";
                    string filepathmobi = "";

                    id = Convert.ToString(selectedId[i]);
                    var command = "SELECT Books.Path, Books.Id, Books.Gebruiker, UserProfile.UserId, UserProfile.Email FROM Books, UserProfile WHERE Books.Gebruiker = UserProfile.UserId AND Books.Id = @0 AND UserProfile.Email = @1";
                    var row = db.QuerySingle(command, id, WebSecurity.CurrentUserName);
                    if (row != null)
                    {
                        path = row.Path;
                    }
                    else
                    {
                        Validation.AddFormError("Er gaat iets fout.");
                    }
                    //if there are spaces in the filename, replace them with %20 so it is readable ??
                    if (Request["pdf"] == "on")
                    {
                        filepdf = "Books/Files/PDF/" + "" + path + "" + ".pdf";
                        filepathpdf = Server.MapPath("~/" + filepdf);
                        downloadpdf[i] = filepathpdf;
                    }
                    if (Request["epub"] == "on")
                    {
                        fileepub = "Books/Files/EPUB/" + "" + path + "" + ".epub";
                        filepathepub = Server.MapPath("~/" + fileepub);
                        downloadepub[i] = filepathepub;
                    }
                    if (Request["mobi"] == "on")
                    {
                        filemobi = "Books/Files/MOBI/" + "" + path + "" + ".mobi";
                        filepathmobi = Server.MapPath("~/" + filemobi);
                        downloadmobi[i] = filepathmobi;
                    }
                }
            }

            for (int i = 0; i < length; i++)
            {
                //foreach variable in download, add it to the right good array
                if (Request["pdf"] == "on")
                {
                    goodpdf[i] = downloadpdf[i];
                }
                if (Request["epub"] == "on")
                {
                    goodepub[i] = downloadepub[i];
                }
                if (Request["mobi"] == "on")
                {
                    goodmobi[i] = downloadmobi[i];
                }
            }

            using (ZipFile Zip = new ZipFile())
            {
                //add the right files to the right folder
                if (Request["pdf"] == "on")
                {
                    Zip.AddFiles(goodpdf, "Pdf");
                }
                if (Request["epub"] == "on")
                {
                    Zip.AddFiles(goodepub, "Epub");
                }
                if (Request["mobi"] == "on")
                {
                    Zip.AddFiles(goodmobi, "Mobi");
                }

                //give a unique name for the zip file
                string zipName = String.Format("Boeken_{0}.zip", DateTime.Now.ToString("dd-MM-yyyy-HHmmss"));
                Response.ContentType = "application/zip";
                Response.AddHeader("content-disposition", "attachment; filename=" + zipName);
                //save the file in downloadfolder of the user
                Zip.Save(Response.OutputStream);
                Response.End();
                Response.Redirect("~/List.cshtml");
            }
        }
    }
}

@if (WebSecurity.IsAuthenticated)
{
    @Html.ValidationSummary()
    <form method="post">
        <fieldset>
                <label for="titel">Kies uw bestandssoort(en): </label>
                <div class="btn-group" data-toggle="buttons">

                    <label class="btn btn-primary">
                        Pdf
                        <input id="pdf" type="checkbox" name="pdf" value="pdf" />
                    </label>
                    <label class="btn btn-primary">
                        Epub
                        <input id="epub" type="checkbox" name="epub" value="epub" />
                    </label>
                    <label class="btn btn-primary">
                        Mobi
                        <input id="mobi" type="checkbox" name="mobi" value="mobi" />
                    </label>
            </div>
                <p>
                    <input type="submit" name="submitbutton" value="Downloaden!" />
                </p>
</fieldset>
    </form>
}
else
{
    Response.Redirect("~/Default.cshtml");
}