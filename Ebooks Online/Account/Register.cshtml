@* Remove this section if you are using bundling *@
@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Register";

    var name = "";
    var lastName = "";
    var email = "";
    var password = "";
    var confirmPassword = "";

    Validation.RequireField("email", "Je moet een geldig e-mailadres toevoegen.");
    Validation.RequireField("password", "Je wachtwoord mag niet niks zijn.");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("password", "De wachtwoorden zijn niet gelijk aan elkaar."));
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Wachtwoord moet minimaal 6 karakters lang zijn."));
    Validation.RequireField("name", "Je moet een naam invullen.");
    Validation.RequireField("lastName", "Je moet een achternaam invullen");

    if (IsPost)
    {
        AntiForgery.Validate();
        email = Request.Form["email"];
        password = Request.Form["password"];
        confirmPassword = Request.Form["confirmPassword"];
        name = Request.Form["name"];
        lastName = Request.Form["lastName"];

        // Validate the user's captcha answer
        // if (!ReCaptcha.Validate("PRIVATE_KEY")) {
        //     ModelState.AddError("recaptcha", "Captcha response was not correct");
        // }

        if (Validation.IsValid())
        {
            var db = Database.Open("StarterSite");

            var user = db.QuerySingle("SELECT Email FROM UserProfile WHERE LOWER(Email) = LOWER(@0)", email);
            if (user == null)
            {
                db.Execute("INSERT INTO UserProfile (Email, name, lastName) VALUES (@0, @1, @2)", email, name, lastName);

                try
                {
                    bool requireEmailConfirmation = !WebMail.SmtpServer.IsEmpty();
                    var token = WebSecurity.CreateAccount(email, password, requireEmailConfirmation);
                    if (requireEmailConfirmation)
                    {
                        var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                        var confirmationUrl = hostUrl + VirtualPathUtility.ToAbsolute("~/Account/Confirm?confirmationCode=" + HttpUtility.UrlEncode(token));

                        WebMail.Send(
                            to: email,
                            subject: "Bevestig uw aanmelding",
                            body: "Uw bevestigingscode is: " + token + ". Bezoek <a href=\"" + confirmationUrl + "\">" + confirmationUrl + "</a> om uw account te activeren."
                        );
                    }

                    if (requireEmailConfirmation)
                    {
                        Response.Redirect("~/Account/Thanks");
                    }
                    else
                    {
                        WebSecurity.Login(email, password);

                        Response.Redirect("~/");
                    }
                }
                catch (System.Web.Security.MembershipCreateUserException e)
                {
                    ModelState.AddFormError(e.Message);
                }
            }
            else
            {
                ModelState.AddFormError("Dit e-mailadres wordt al gebruikt.");
            }
        }
    }
}

<div class="container">
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3">
            <div class="logincard">
                <h4 class="text-center">Maak een E-Books Online account</h4>
                <hr />
                <form method="post">
                    @AntiForgery.GetHtml()
                    @Html.ValidationSummary("Account aanmaken was onsuccesvol. Verbeter alstublieft de fouten.", excludeFieldErrors: true, htmlAttributes: null)

                    <fieldset>
                        <div class="input-group">
                            <span class="input-group-addon" id="sizing-addion1"><i class="glyphicon glyphicon-user"></i></span>
                            <input type="text" class="form-control" id="email" name="email" placeholder="example@provider.com" value="@email" @Validation.For("email") />
                        </div>

       
                        @* Write any email validation errors to the page *@
                        @Html.ValidationMessage("email")

                        <br />

                        <div class="form-inline">
                            <div class="input-group">
                                <span class="input-group-addon" id="sizing-addion1"><i class="glyphicon glyphicon-lock"></i></span>
                                <input type="password" class="form-control" placeholder="Wachtwoord" id="password" name="password" @Validation.For("password") />
                               
                            </div>
                            <div class="input-group">
                                <input type="password" class="form-control" placeholder="Herhaal" id="confirmPassword" name="confirmPassword" @Validation.For("confirmPassword") />
                            </div>                    
                        </div>

                        @* Write any password validation errors to the page *@
                        @Html.ValidationMessage("password")
                        @* Write any password validation errors to the page *@
                        @Html.ValidationMessage("confirmPassword")

                        <br />
                        <br />

                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Voornaam" id="name" name="name" value="@name" @Validation.For("name") />
                        </div>
                        <br />
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Achternaam" id="lastName" name="lastName" value="@lastName" @Validation.For("lastName") />             
                        </div>
                        
                        @Html.ValidationMessage("naam")
                        @Html.ValidationMessage("lastName")

                        <br />

                        <input type="submit" class="btn btn-succes" value="Register" />
                    </fieldset>
                </form>
                <hr />

                <a href="~/Account/Login.cshtml" class="btn btn-default">Ik heb al een account</a>
            </div>
        </div>
    </div>
</div>
