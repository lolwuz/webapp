@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Wachtwoord Reset";

    var passwordResetToken = Request.Form["resetToken"] ?? Request.QueryString["resetToken"];

    bool tokenExpired = false;
    bool isSuccess = false;



    // Setup validation
    //Validation.RequireField("newPassword", "The new password field is required.");
    Validation.Add("confirmPassword",
Validator.EqualsTo("newPassword", "Het nieuwe wachtwoord en herhaal wachtwoord komen niet overeen."));
    //Validation.RequireField("passwordResetToken", "The password reset token field is required.");
    Validation.Add("newPassword",
Validator.StringLength(
    maxLength: Int32.MaxValue,
    minLength: 6,
    errorMessage: "Het nieuwe wachtwoord moet minstens 6 characters lang zijn"));

    if (IsPost && Validation.IsValid())
    {
        AntiForgery.Validate();
        var newPassword = Request["newPassword"];
        var confirmPassword = Request["confirmPassword"];

        if (WebSecurity.ResetPassword(passwordResetToken, newPassword))
        {
            isSuccess = true;
        }
        else
        {
            ModelState.AddError("passwordResetToken", "De wachtwoord reset code is ongeldig.");
            tokenExpired = true;
        }
    }
}

@if (!WebMail.SmtpServer.IsEmpty())
{
    if (!Validation.IsValid())
    {
        <p class="validation-summary-errors">
            @if (tokenExpired)
            {
                <text>De wachtwoord reset code is ongeldig of vervallen. Bezoek de <a href="~/Account/ForgotPassword">wachtwoord vergeten pagina</a>
                    om een nieuwe code te genereren.
                </text>
            }
            else
            {
                <text>Het wacht woord kon niet gereset worden. Verbeter de errors en probeer het opnieuw.</text>
            }
        </p>
    }

    if (isSuccess)
    {
        <div class="row">
            <div class="col-sm-6 col-sm-offset-3">
                <div class="logincard text-center">
                    <h3 class="message-succes">
                        Wachtwoord verandert! Klik <a href="~/Account/Login" title="Log in">hier</a> om in te loggen.
                    </h3>
                </div>
            </div>
        </div>
    }
                    <div class="row">
                        <div class="col-sm-6 col-sm-offset-3">
                            <div class="logincard">
                                <form method="post">
                                    @AntiForgery.GetHtml()
                                    <fieldset>
                                        <h4 class="text-center">Vul een nieuw wachtwoord in</h4>
                                        <hr />
                                        <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) { <text> class="error-label" </text>    }></label>
                                        <div class="input-group">
                                            <span class="input-group-addon" id="sizing-addion1">Nieuw wachtwoord</span>
                                            <input type="password" class="form-control" id="newPassword" name="newPassword" disabled="@isSuccess" @Validation.For("newPassword") />
                                        </div>
                                        @Html.ValidationMessage("newPassword")

                                        <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) { <text> class="error-label" </text>     }></label>
                                        <div class="input-group">
                                            <span class="input-group-addon" id="sizing-addion1">Herhaal wachtwoord</span>
                                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" disabled="@isSuccess" @Validation.For("confirmPassword") />
                                        </div>
                                        @Html.ValidationMessage("confirmPassword")

                                        <label for="resetToken" @if (!ModelState.IsValidField("resetToken")) { <text> class="error-label" </text>      }></label>
                                        <div class="input-group">
                                            <span class="input-group-addon" id="sizing-addion1">wachtwoord reset code</span>
                                            <input type="text" class="form-control" id="resetToken" name="resetToken" value="@passwordResetToken" disabled="@isSuccess" @Validation.For("resetToken") />
                                        </div>
                                        @Html.ValidationMessage("resetToken")
                                        <br />
                                        <input type="submit" class="btn btn-default default-primary-color" value="Reset wachtwoord" disabled="@isSuccess" />
                                    </fieldset>
                                </form>
                            </div>
                        </div>
                    </div>
                    }
                    else
                    {
                    <p class="message-info">
                        De wachtwoord reset pagina is niet bereikbaar. Neem contact op met de website-beheerder om uw wachtwoord te veranderen.
                    </p>
                    }
